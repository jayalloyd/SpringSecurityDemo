package com.meenus.SpringSecurityDemo.config;

import org.springframework.beans.factory.annotation.Configurable;
import org.springframework.boot.web.embedded.undertow.UndertowServletWebServer;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.http.SessionCreationPolicy;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
public class SecurityConfig {
    @Bean
    public SecurityFilterChain SecurityChain(HttpSecurity http) throws Exception {
http.csrf(Customizer->Customizer.disable());
    http.authorizeHttpRequests(request->request.anyRequest().authenticated());//disabling csrf token
 http.formLogin(Customizer.withDefaults());
 http.httpBasic(Customizer.withDefaults());
 http.sessionManagement(session-> session.sessionCreationPolicy(SessionCreationPolicy.STATELESS));


    return http.build();
    }
    @Bean
    public UserDetailsService userDetailsService(){//setting userDetails and password for multiple users
        UserDetails user= User.withDefaultPasswordEncoder().username("rooney").password("rooney123").roles("user").build();// withDefaultPasdswordEncoder is deprecated
        UserDetails admin=User.withDefaultPasswordEncoder().username("lloyd").password("1234").roles("admin").build();
        return  new InMemoryUserDetailsManager(user,admin);
    }
}
